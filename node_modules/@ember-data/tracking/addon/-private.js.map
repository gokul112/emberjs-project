{"version":3,"file":"-private.js","sources":["../src/-private.ts"],"sourcesContent":["import { DEBUG } from '@ember-data/env';\n\n/**\n * This package provides primitives that allow powerful low-level\n * adjustments to change tracking notification behaviors.\n *\n * Typically you want to use these primitives when you want to divorce\n * property accesses on EmberData provided objects from the current\n * tracking context. Typically this sort of thing occurs when serializing\n * tracked data to send in a request: the data itself is often ancillary\n * to the thing which triggered the request in the first place and you\n * would not want to re-trigger the request for any update to the data.\n *\n * @module @ember-data/tracking\n * @main @ember-data/tracking\n */\ntype OpaqueFn = (...args: unknown[]) => unknown;\ntype Tag = { ref: null; t: boolean };\ntype Transaction = {\n  cbs: Set<OpaqueFn>;\n  props: Set<Tag>;\n  sub: Set<Tag>;\n  parent: Transaction | null;\n};\nlet TRANSACTION: Transaction | null = null;\n\nfunction createTransaction() {\n  let transaction: Transaction = {\n    cbs: new Set(),\n    props: new Set(),\n    sub: new Set(),\n    parent: null,\n  };\n  if (TRANSACTION) {\n    transaction.parent = TRANSACTION;\n  }\n  TRANSACTION = transaction;\n}\n\nexport function subscribe(obj: Tag): void {\n  if (TRANSACTION) {\n    TRANSACTION.sub.add(obj);\n  } else {\n    obj.ref;\n  }\n}\n\nfunction updateRef(obj: Tag): void {\n  if (DEBUG) {\n    try {\n      obj.ref = null;\n    } catch (e: unknown) {\n      if (e instanceof Error) {\n        if (e.message.includes('You attempted to update `ref` on `Tag`')) {\n          e.message = e.message.replace(\n            'You attempted to update `ref` on `Tag`',\n            // @ts-expect-error\n            `You attempted to update <${obj._debug_base}>.${obj._debug_prop}` // eslint-disable-line\n          );\n          e.stack = e.stack?.replace(\n            'You attempted to update `ref` on `Tag`',\n            // @ts-expect-error\n            `You attempted to update <${obj._debug_base}>.${obj._debug_prop}` // eslint-disable-line\n          );\n\n          const lines = e.stack?.split(`\\n`);\n          const finalLines: string[] = [];\n          let lastFile: string | null = null;\n\n          lines?.forEach((line) => {\n            if (line.trim().startsWith('at ')) {\n              // get the last string in the line which contains the code source location\n              const location = line.split(' ').at(-1)!;\n              // remove the line and char offset info\n\n              if (location.includes(':')) {\n                const parts = location.split(':');\n                parts.pop();\n                parts.pop();\n                const file = parts.join(':');\n                if (file !== lastFile) {\n                  lastFile = file;\n                  finalLines.push('');\n                }\n              }\n              finalLines.push(line);\n            }\n          });\n\n          const splitstr = '`ref` was first used:';\n          const parts = e.message.split(splitstr);\n          parts.splice(1, 0, `Original Stack\\n=============\\n${finalLines.join(`\\n`)}\\n\\n${splitstr}`);\n\n          e.message = parts.join('');\n        }\n      }\n      throw e;\n    }\n  } else {\n    obj.ref = null;\n  }\n}\n\nfunction flushTransaction() {\n  let transaction = TRANSACTION!;\n  TRANSACTION = transaction.parent;\n  transaction.cbs.forEach((cb) => {\n    cb();\n  });\n  transaction.props.forEach((obj: Tag) => {\n    // mark this mutation as part of a transaction\n    obj.t = true;\n    updateRef(obj);\n  });\n  transaction.sub.forEach((obj: Tag) => {\n    obj.ref;\n  });\n}\nasync function untrack() {\n  let transaction = TRANSACTION!;\n  TRANSACTION = transaction.parent;\n\n  // defer writes\n  await Promise.resolve();\n  transaction.cbs.forEach((cb) => {\n    cb();\n  });\n  transaction.props.forEach((obj: Tag) => {\n    // mark this mutation as part of a transaction\n    obj.t = true;\n    updateRef(obj);\n  });\n}\n\nexport function addToTransaction(obj: Tag): void {\n  if (TRANSACTION) {\n    TRANSACTION.props.add(obj);\n  } else {\n    updateRef(obj);\n  }\n}\nexport function addTransactionCB(method: OpaqueFn): void {\n  if (TRANSACTION) {\n    TRANSACTION.cbs.add(method);\n  } else {\n    method();\n  }\n}\n\n/**\n * Run `method` without subscribing to any tracked properties\n * controlled by EmberData.\n *\n * This should rarely be used except by libraries that really\n * know what they are doing. It is most useful for wrapping\n * certain kinds of fetch/query logic from within a `Resource`\n * `hook` or other similar pattern.\n *\n * @function untracked\n * @public\n * @static\n * @for @ember-data/tracking\n * @param method\n * @returns result of invoking method\n */\nexport function untracked<T extends OpaqueFn>(method: T): ReturnType<T> {\n  createTransaction();\n  const ret = method();\n  void untrack();\n  return ret as ReturnType<T>;\n}\n\n/**\n * Run the method, subscribing to any tracked properties\n * managed by EmberData that were accessed or written during\n * the method's execution as per-normal but while allowing\n * interleaving of reads and writes.\n *\n * This is useful when for instance you want to perform\n * a mutation based on existing state that must be read first.\n *\n * @function transact\n * @public\n * @static\n * @for @ember-data/tracking\n * @param method\n * @returns result of invoking method\n */\nexport function transact<T extends OpaqueFn>(method: T): ReturnType<T> {\n  createTransaction();\n  const ret = method();\n  flushTransaction();\n  return ret as ReturnType<T>;\n}\n\n/**\n * A helpful utility for creating a new function that\n * always runs in a transaction. E.G. this \"memoizes\"\n * calling `transact(fn)`, currying args as necessary.\n *\n * @method memoTransact\n * @public\n * @static\n * @for @ember-data/tracking\n * @param method\n * @returns a function that will invoke method in a transaction with any provided args and return its result\n */\nexport function memoTransact<T extends OpaqueFn>(method: T): (...args: unknown[]) => ReturnType<T> {\n  return function (...args: unknown[]) {\n    createTransaction();\n    const ret = method(...args);\n    flushTransaction();\n    return ret as ReturnType<T>;\n  };\n}\n"],"names":["TRANSACTION","createTransaction","transaction","cbs","Set","props","sub","parent","subscribe","obj","add","ref","updateRef","macroCondition","getOwnConfig","env","DEBUG","e","Error","message","includes","replace","_debug_base","_debug_prop","stack","lines","split","finalLines","lastFile","forEach","line","trim","startsWith","location","at","parts","pop","file","join","push","splitstr","splice","flushTransaction","cb","t","untrack","Promise","resolve","addToTransaction","addTransactionCB","method","untracked","ret","transact","memoTransact","args"],"mappings":"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"}